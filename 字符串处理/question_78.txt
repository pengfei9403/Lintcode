/*
给k个字符串，求出他们的最长公共前缀(LCP)
样例
在 "ABCD" "ABEF" 和 "ACEF" 中,  LCP 为 "A"

在 "ABCDEFG", "ABCEFG", "ABCEFA" 中, LCP 为 "ABC"

*/


//题目心得：还是得注意参数边界，比如空参数
//
//
//
//

class Solution {
public:    
    /**
     * @param strs: A list of strings
     * @return: The longest common prefix
     */
     
    bool sortfunc(const string& a , const string& b){
	    return a.size() - b.size() ;
    }
    string longestCommonPrefix(vector<string> &strs) {
        // write your code here
        int len = strs.size();
        int j = 0 ;
    	int flag = 1 ;
    	string ans ;
    	if(0 == strs.size()){
    	    return ans;
    	}
    	int min = strs[0].size() ;
    	for(int i = 0 ; i < len ; i++){
    		if(strs[i].size() < min){
    			min = strs[i].size();
    		}
    	}
    	for(j = 0 ; j < min ; j++){
    		for(int i = 0 ; i < strs.size() ; i++){
    //			cout << "i=" << i << endl ;
    			if(strs[0][j] != strs[i][j]){
    				flag = 0 ;
    				break ;
    			}
    		}
    		if(flag){
    			ans += strs[0][j] ;
    		}else{
    			break;
    		}
    	}
    	return ans ;
    }
};